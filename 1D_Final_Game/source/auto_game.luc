module auto_game (
    input clk,  // clock
    input rst,  // reset
    input button_player_1[5],
    input button_player_2[5],
    input start,
    input difficulty[2],//0-easy, 1-medium, 2-hard
    output led_player_1[5],
    output led_player_2[5],
    output io_led [2][8],
    output out
  ) {
  const SLOWCLOCK_SIZE = 27;  
  fsm game_state(.clk(clk), .rst(rst))={STATE1,STATE2,STATE3,STATE4,STATE5}; 
  dff inp_sate_change[3](.clk(clk), .rst(rst));  
  pn_gen rng(.clk(clk), .rst(rst));
  counter slowClock(#SIZE(SLOWCLOCK_SIZE), .clk(clk), .rst(rst));
  edge_detector slowClockEdge(#RISE(1), #FALL(0), .clk(clk));
  
  always {
  //assignment
    out=0;
    rng.next=1;
    rng.seed=1;
    io_led= 2x{{8h00}};
    
    slowClockEdge.in = slowClock.value[SLOWCLOCK_SIZE-1];
    
    led_player_1=00000;
    led_player_2=00000;
    inp_sate_change.d=000;
    case(start){
      b1:
    
      case(game_state.q){
       game_state.STATE1 : 
              
             if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
      	            io_led[0]=8h01;   
                  game_state.d = game_state.STATE2;
                    
            }
              
       game_state.STATE2 : 
              
             if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                    io_led[0]=8h02;
      	              game_state.d = game_state.STATE3;
            }   
       game_state.STATE3 : 
              
             if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                    io_led[0]=8h03;
      	              game_state.d = game_state.STATE4;
            }
       game_state.STATE4 : 
              
             if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                    io_led[0]=8h04;
      	              game_state.d = game_state.STATE5;
            }
       game_state.STATE5 : 
              
           if (slowClockEdge.out == b1 ){ //only trigger change when slowClockEdge gives a 1
                    io_led[0]=8h5;
      	              //game_state.d = game_state.STATE1;
                    out=1;
          }
        }
    }
  }
}

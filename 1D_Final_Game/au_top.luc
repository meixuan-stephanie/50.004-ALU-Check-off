module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],     // DIP switches on IO Shield
    output led_player_1[5],
    output led_player_2[5],
    input button_player_1[5],        //player 1 inputs
    input button_player_2[5],
    input switch
    //CHANGE IO_DIP[2][7] TO SWITHCH input
  ) {

  sig rst;                  // reset signal
  
  const SLOWCLOCK_SIZE = 27; 
  const TIMER=15;
  counter slowClock_game(#SIZE(SLOWCLOCK_SIZE), .clk(clk), .rst(rst)); 
  edge_detector slowClockEdge(#RISE(1), #FALL(0), .clk(clk));
  edge_detector buttondetector[5](#RISE(1), #FALL(0),.clk(clk)); //detect on rising edge only
  button_conditioner buttoncond[5](.clk(clk));
  
//  edge_detector buttondetector[4](#RISE(1), #FALL(0),.clk(clk)); //detect on rising edge only
  
  pn_gen rng(.clk(clk), .rst(rst));  

//  auto_game game(.clk(slowclock.value), .rst(io_button[0]));
  
  fsm state (.clk(clk), .rst(rst)) = {IDLE,START_GAME,ENTER_DIFFICULTY,GAME_STARTS,STATE1,STATE2,STATE3,STATE4,STATE5,INTERMEDIATE,GAME_END}; 
  dff inp_game_difficulty[2](.clk(clk), .rst(rst));  // to store value of difficulty
  dff checker[2](.clk(clk), .rst(rst));
  dff random[3](.clk(clk), .rst(rst));              //store the value of a random number
  dff speed[2](.clk(clk), .rst(rst));                //controls speed of game
  dff int[5](.clk(clk), .rst(rst));
  dff score[5](.clk(clk), .rst(rst));  
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    slowClockEdge.in = slowClock_game.value[SLOWCLOCK_SIZE-1];
//    buttoncond.in = io_button[3:0];
//    buttondetector.in = buttoncond.out;
//    some_system.trigger_input = buttondetector.out;
    
    buttoncond.in = io_button[4:0];//button checker
    buttondetector.in = buttoncond.out;
    
    rng.next=1;
    rng.seed=1;
    
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    usb_tx = usb_rx;        // loop serial port
    
    led = 8h00;             // turn LEDs off
    
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
    
    led_player_1=00000;
    led_player_2=00000;
    
    case(io_dip[2][7]){         
      b0://starting manual testing
      if(switch==1|io_dip[2][6]==1){
          state.d=state.IDLE;
          }
      case(state.q){
            state.IDLE:
                  io_led[1][0]=1;
                  if(io_dip[2][6]==0){
                      state.d=state.START_GAME;
                  }    
                  
            state.START_GAME:
                  io_led[0][0]=1;
                  inp_game_difficulty.d=00;
                if (/*button_player_1[4] == 1|*/ buttondetector.out[0]==1) {                  
                    state.d = state.ENTER_DIFFICULTY;        
                }  
          
          
            
            
            state.ENTER_DIFFICULTY:
                  io_led[0][1]=1;
                  io_led[0][7:6]=inp_game_difficulty.q;
                      if (buttondetector.out[3]){
                      //fourth button pressed 
                            inp_game_difficulty.d=01;
                      }
                      else if (buttondetector.out[4]){
                          //third button pressed 
                          inp_game_difficulty.d = b11;
                      }
                      else if (buttondetector.out[1]){
                          //second button pressed 
                          inp_game_difficulty.d = b00;
                      }
                      else if (buttondetector.out[0]){
                          //first button pressed 
                          inp_game_difficulty.d= b10;
                      }                                         
                if(/*button_player_1[3]==1|*/ buttondetector.out[2]==1 & inp_game_difficulty.q!=00){
                    state.d=state.GAME_STARTS;
                }
                
        
            
                    
            state.GAME_STARTS:
                int.d=00000;
                io_led[2][7]=1;
                score.d=00000;
                io_led[2][7:3]=score.q;
                io_led[1][1:0]=inp_game_difficulty.q;
                if(inp_game_difficulty.q==01){
                        speed.d=00;
                }
                if(inp_game_difficulty.q==10){
                        speed.d=01;
                }
                if(inp_game_difficulty.q==11){
                        speed.d=11;
                }
                random.d=rng.num[2:0];            
                if(button_player_1[4]==1| buttondetector.out[2]==1){
                    
                    random.d=rng.num[2:0];
              
                    if(random.q[2:0]==000){
                        checker.d=11;
                        state.d=state.STATE1;
                    }
                    if(random.q[2:0]==001||random.q[2:0]==101){
                        state.d=state.STATE2;
                    }
                    if(random.q[2:0]==010){
                        state.d=state.STATE3;
                    }
                    if(random.q[2:0]==011||random.q[2:0]==111){
                        state.d=state.STATE4;
                    }
                    if(random.q[2:0]==100||random.q[2:0]==110){
                        state.d=state.STATE5;
                    }
                  else{
                        state.d=state.STATE3;      
                }
                        
                }
               

                         
            state.STATE1 : 
                  io_led[0][0]=1;
//                  io_led[1][2:1]=checker.q;
                  io_led[1][4:0]=int.q;
                  io_led[2][2:0]=random.q;
                  io_led[2][7:3]=score.q;
            
                   if(int.q>=TIMER){
                        state.d = state.GAME_END;
                        }
                   if(button_player_1[0]==1 | buttondetector.out[3]==1){//increase score
                        score.d=score.q+1;            
                        }
                       
                   if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                      int.d=int.q+1;   
      	                checker.d=checker.q+1;  
                      random.d=rng.num[2:0];
                      
                      if(random.q[2:0]==000){
                          state.d=state.STATE1;
                          }
                      else if(random.q[2:0]==001 | random.q[2:0]==101){
                          state.d=state.STATE2;
                          }
                      else if(random.q[2:0]==010 | random.q[2:0]==110){
                         state.d=state.STATE3;
                          }
                      else if(random.q[2:0]==011 | random.q[2:0]==111){
                          state.d=state.STATE4; 
                          }
                      else if(random.q[2:0]==100){
                          state.d=state.STATE5;
                          }
                      else{
                          state.d=state.STATE4;
                          }
                                                       
                    }
              
            state.STATE2 : 
                io_led[0][1]=1;
//                io_led[1][2:1]=checker.q;
                io_led[1][4:0]=int.q;
                io_led[2]=random.q;
                io_led[2][7:3]=score.q;
                   if(int.q>=TIMER){
                        state.d = state.GAME_END;
                  }
            
                    if(button_player_1[1]==1 | buttondetector.out[0]==1){//increase score
                        score.d=score.q+1;            
                        }
            
                 if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                    int.d=int.q+1;  
                    checker.d=checker.q+1;
                    random.d=rng.num[2:0];
              
      	              if(random.q[2:0]==000 | random.q[2:0]==111){
                          state.d=state.STATE1;
                          }
                      else if(random.q[2:0]==001){
                          state.d=state.STATE2;
                          }
                      else if(random.q[2:0]==010 | random.q[2:0]==110){
                         state.d=state.STATE3;
                          }
                      else if(random.q[2:0]==011 | random.q[2:0]==101){
                          state.d=state.STATE4;
                          }
                      else{
                          state.d=state.STATE5;
                          }                   
                    }
               
            state.STATE3 : 
                io_led[0][2]=1;
//                  io_led[1][2:1]=checker.q;
                  io_led[1][4:0]=int.q;
                  io_led[2]=random.q;
                  io_led[2][7:3]=score.q;
                   if(int.q>=TIMER){
                        state.d = state.GAME_END;
                  } 
                  if(button_player_1[2]==1 | buttondetector.out[4]==1){//increase score
                        score.d=score.q+1;            
                        } 
                   if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                      int.d=int.q+1;   
      	                checker.d=checker.q+1;  
                      random.d=rng.num[2:0];
                      
                      if(random.q[2:0]==000){
                          state.d=state.STATE1;
                      }
                      else if(random.q[2:0]==001 | random.q[2:0]==111){
                          state.d=state.STATE2;
                      }
                      else if(random.q[2:0]==010 | random.q[2:0]==110){
                         state.d=state.STATE3;
                      }
                      else if(random.q[2:0]==011 | random.q[2:0]==101){
                          state.d=state.STATE4; 
                      }
                      else if(random.q[2:0]==100){
                          state.d=state.STATE5;
                      }
                      else{
                          state.d=state.STATE2;
                      }
                                                       
                    }
            
            state.STATE4 : 
                  io_led[0][3]=1;
//                  io_led[1][2:1]=checker.q;
                  io_led[1][4:0]=int.q;
                  io_led[2]=random.q;
                  io_led[2][7:3]=score.q;
                  if(int.q>=TIMER){
                        state.d = state.GAME_END;
                  }
            
                  if(button_player_1[3]==1 | buttondetector.out[2]==1){//increase score
                        score.d=score.q+1;            
                        }
            
                 if (slowClockEdge.out == b1){ //only trigger change when slowClockEdge gives a 1
                    int.d=int.q+1; 
                    checker.d=checker.q+1;
                    random.d=rng.num[2:0];
      	              
                      if(random.q==000){
                          state.d=state.STATE1;
                      }
                      else if(random.q==001 | random.q==101){
                          state.d=state.STATE2;
                      }
                      else if(random.q==010 | random.q==110){
                         state.d=state.STATE3;
                      }
                      else if(random.q==011){
                          state.d=state.STATE4;
                      }
                      else if(random.q==100 | random.q==111){
                          state.d=state.STATE3;
                      }
                      else {
                          state.d=state.STATE2;
                      }                   
                    }
            
            state.STATE5 : 
               io_led[0][4]=1; 
//                io_led[1][2:1]=checker.q;
                io_led[1][4:0]=int.q;
                io_led[2]=random.q;
                io_led[2][7:3]=score.q;
                if(int.q>=TIMER){
                        state.d = state.GAME_END;
                  }
            
                if(button_player_1[4]==1 | buttondetector.out[1]==1){//increase score
                        score.d=score.q+1;            
                        }
            
               if (slowClockEdge.out == b1 ){ //only trigger change when slowClockEdge gives a 1
                    int.d=int.q+1; 
                    checker.d=checker.q+1;
                    random.d=rng.num[2:0];
      	              if(random.q==000){
                          state.d=state.STATE1;
                      }
                      else if(random.q==001 | random.q==111){
                          state.d=state.STATE2;
                      }
                      else if(random.q==010){
                         state.d=state.STATE3;
                      }
                      else if(random.q==011 | random.q==101){
                          state.d=state.STATE4;
                      }
                      else if(random.q==100 | random.q==110){
                          state.d=state.STATE5;
                      }
                      else    {
                          state.d=state.STATE3;
                      }                
                    }
          
            state.GAME_END:
                io_led[2][6]=1;
                io_led[1]=score.q;
                if( buttondetector.out[2]==1){
                      state.d=state.START_GAME;
                }
                     
          
                }
        
    
   
            }    
        }   
  

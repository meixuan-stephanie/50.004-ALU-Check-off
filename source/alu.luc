module alu (
    input a[16],
    input b[16],
    input alufn_signal[6],
    output out[16],
    output z,
    output v,
    output n
  ) {
  
  adder adder;
  boolean booleanUnit;
  shifter shifterUnit;
  compare compareUnit; 
  
  sig z1;
  sig v1;
  sig n1;  
  
  
  always {
    adder.alufn = alufn_signal;
    adder.a = a;
    adder.b = b;
    
    z1 = adder.z;
    v1 = adder.v;
    n1 = adder.n; 
    
    z = z1;
    v = v1;
    n= n1;    
     
    
    compareUnit.alufn = alufn_signal;
    compareUnit.a = a;
    compareUnit.b = b;

    
    booleanUnit.alufn= alufn_signal;
    booleanUnit.a = a;
    booleanUnit.b = b;
    
    shifterUnit.alufn = alufn_signal;
    shifterUnit.a = a;
    shifterUnit.b = b[3:0];
    
    case(alufn_signal[5:4]){
      b00 : out = adder.out;
      b01 : out = booleanUnit.out;
      b10 : out = shifterUnit.out;
      b11 : out = compareUnit.out;
      default: out = 16b0;
    }
    }
  }

